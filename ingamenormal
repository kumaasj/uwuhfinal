if not game:IsLoaded() then game.Loaded:Wait() end

local function switchServer(smallServer)
    while true do
        pcall(function()
            local availableServers = {};
            local servers = game:GetService('HttpService'):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/606849621/servers/Public?limit=100"..(smallServer and "&sortOrder=Asc" or "")));
            while #availableServers < 20 and servers.nextPageCursor do
                for _, server in pairs(servers.data) do
                    if server.maxPlayers and server.playing then
                        if #availableServers >= 20 then
                            break;
                        end
                        if server.maxPlayers - server.playing > 3 then
                            availableServers[#availableServers + 1] = server.id;
                        end
                    end
                end
                servers = game:GetService('HttpService'):JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/606849621/servers/Public?limit=100&cursor="..servers.nextPageCursor..(smallServer and "&sortOrder=Asc" or "")));
                wait();
            end
            game:GetService('TeleportService'):TeleportToPlaceInstance(606849621, availableServers[math.random(1, #availableServers)]);
            wait(15);
        end)
        wait(2);
    end
end

local function optimizeWorld()
    local terrain = workspace:FindFirstChild('Terrain')
    terrain.WaterTransparency = 0
    terrain.WaterWaveSize = 0
    terrain.WaterWaveSpeed = 0
    terrain.WaterReflectance = 0
    if terrain:FindFirstChild('Clouds') then terrain.Clouds:Destroy() end
    game.Lighting.GlobalShadows = false
    game.Lighting.FogEnd = 999999999

    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA('Part') or part:IsA('UnionOperation') or part:IsA('MeshPart') or part:IsA('CornerWedgePart') or part:IsA('TrussPart') then
            part.Transparency = 1
        elseif part:IsA('Decal') then
            part.Transparency = 1
        elseif part:IsA('ParticleEmitter') or part:IsA('Trail') then
            part.Lifetime = NumberRange.new(0)
        elseif part:IsA('Explosion') then
            part.BlastPressure = 1
            part.BlastRadius = 1
        end
    end

    workspace.DescendantAdded:Connect(function(part)
        if part:IsA('Part') or part:IsA('UnionOperation') or part:IsA('MeshPart') or part:IsA('CornerWedgePart') or part:IsA('TrussPart') then
            part.Transparency = 1
        elseif part:IsA('Decal') then
            part.Transparency = 1
        elseif part:IsA('ParticleEmitter') or part:IsA('Trail') then
            part.Lifetime = NumberRange.new(0)
        elseif part:IsA('Explosion') then
            part.BlastPressure = 1
            part.BlastRadius = 1
        end
    end)

    for _, part in pairs(game.Lighting:GetDescendants()) do
        if part:IsA('BlurEffect') or part:IsA('SunRaysEffect') or part:IsA('ColorCorrectionEffect') or part:IsA('BloomEffect') or part:IsA('DepthOfFieldEffect') then
            part.Enabled = false
        end
    end

    game.Lighting.DescendantAdded:Connect(function(part)
        if part:IsA('BlurEffect') or part:IsA('SunRaysEffect') or part:IsA('ColorCorrectionEffect') or part:IsA('BloomEffect') or part:IsA('DepthOfFieldEffect') then
            part.Enabled = false
        end
    end)
end

optimizeWorld()

local services = setmetatable({}, {
    __index = function(_, idx) return game:GetService(idx) end
})

local waitTime = 18
local chatMsgs = {
    'üî¥·¥°·¥Ä…¥·¥õ  è·¥è·¥ú Ä ·¥Ö Ä·¥á·¥Ä·¥ç ·¥Ñ·¥Ä Äs Íú∞·¥è Ä ·¥Ñ ú·¥á·¥Ä·¥òÔπñ | V…™s…™·¥õ J ôs·¥á ü ü·¥á Äs.s·¥õ·¥è Ä·¥á',
    'üî¥ ô·¥ú è ·¥Ä…¥ è …™·¥õ·¥á·¥ç  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ | V…™s…™·¥õ J ôs·¥á ü ü·¥á Äs.s·¥õ·¥è Ä·¥á',
    'üî¥s·¥Ä·¥†·¥á  è·¥è·¥ú Ä ·¥õ…™·¥ç·¥á ·¥Ä…¥·¥Ö  è·¥è·¥ú Ä ·¥°·¥Ä ü ü·¥á·¥õ | V…™s…™·¥õ J ôs·¥á ü ü·¥á Äs.s·¥õ·¥è Ä·¥á',
    'üî¥·¥°·¥á ·¥Ä Ä·¥á ·¥õ ú·¥á ·¥Ñ ú·¥á·¥Ä·¥ò·¥ás·¥õ ·¥Ä…¥·¥Ö ·¥õ ú·¥á  ô·¥ás·¥õ  | G·¥è J ôs·¥á ü ü·¥á Äs.s·¥õ·¥è Ä·¥á',
    'üî¥·¥°·¥Ä…¥·¥õ ·¥õ ú·¥á  ô·¥ás·¥õ Íú∞·¥è Ä ·¥Ñ ú·¥á·¥Ä·¥òÔπñ | V…™s…™·¥õ J ôs·¥á ü ü·¥á Äs.s·¥õ·¥è Ä·¥á',
}

coroutine.wrap(function()
    repeat
        local _ = services.TextChatService.TextChannels['RBXGeneral']:SendAsync(chatMsgs[math.random(1, #chatMsgs)], 'All')
        task.wait(2)
    until false
end)()

task.wait(waitTime)

switchServer();
